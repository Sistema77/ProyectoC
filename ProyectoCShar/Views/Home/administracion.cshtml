﻿@{
    ViewData["Title"] = "administracionUsuarios";
    var noSePuedeEliminar = ViewData["noSePuedeEliminar"] as string;
    var elUsuarioTieneQuedadas = ViewData["elUsuarioTieneQuedadas"] as string;
    var eliminacionCorrecta = ViewData["eliminacionCorrecta"] as string;
    var EdicionCorrecta = ViewData["EdicionCorrecta"] as string;
    var mensajeRegistroExitoso = ViewData["MensajeRegistroExitoso"] as string;
    var cuentaNoVerificada = ViewData["EmailNoConfirmado"] as string;
    var noTePuedesEliminar = ViewData["noTePuedesEliminar"] as string;
    var usuarioNoEncontrado = ViewData["usuarioNoEncontrado"] as string;
    var error = ViewData["error"] as string;


}

<div class="container py-4">
    <div class="card bg-light cardPrincipal cardAdminUser">
        <div class="card-header border-bottom border-3">
            <h3 class="subtituloSecundario">Administración</h3>
        </div>
        <div class="card-body">
            <div class="row">
            </div>
            @if (ViewBag.Usuarios != null)
            {
                <table class="table table-striped table-bordered">
                    <thead class="thead-inverse">
                        <tr>
                            <th class="tableCustom">id</th>
                            <th class="tableCustom">Nombre y apellidos</th>
                            <th class="tableCustom">Email</th>
                            <th class="tableCustom">Teléfono</th>
                            <th class="tableCustom">Fecha de registro</th>
                            <th class="tableCustom">Cuenta activa</th>
                            <th class="tableCustom">Rol</th>
                            <th class="tableCustom" asp:authorize="User.IsInRole('ROLE_ADMIN')">Edición</th>
                            <th class="tableCustom" asp:authorize="User.IsInRole('ROLE_ADMIN')">Eliminado</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var usuario in ViewBag.Usuarios)
                        {
                            <tr>
                                <td>@usuario.id_usuario</td>
                                <td>@(usuario.name + (usuario.name + " " + usuario.last_name))</td>
                                <td>@usuario.email</td>
                                <td class="text-center">@usuario.tlf</td>
                                <td>@usuario.fch_alta</td>
                                <td class="text-center">@(usuario.cuentaConfirmada ? "Sí" : "No")</td>
                                <td>@(usuario.tipo_usuario == "ROLE_USER" ? "USER" : "ADMIN")</td>
                                <td asp:authorize="User.IsInRole('ROLE_ADMIN')">
                                    <a class="btn buttonPrincipal" asp-action="MostrarFormularioEdicion" asp-controller="AdministracionUsuarios" asp-route-id="@usuario.id_usuario">
                                        <i class="bi bi-pencil-square"> Editar</i>
                                    </a>
                                </td>
                                <td asp:authorize="User.IsInRole('ROLE_ADMIN')">
                                    <a class="btn btn-danger" data-id="@usuario.id_usuario" asp-action="EliminarUsuario" asp-controller="AdministracionUsuarios">
                                        <i class="bi bi-trash"> Eliminar</i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <h5 class="card-title text-center text-danger">No hay usuarios registrados</h5>
            }
        </div>
    </div>
    @if (!string.IsNullOrEmpty(usuarioNoEncontrado))
    {
        <script>
            mostrarNotificacion("¡No se encontraron usuarios!", "No hay ninguna coincidencia en ningún email con la busqueda introducida", 'info');
        </script>
    }
    @if (!string.IsNullOrEmpty(mensajeRegistroExitoso))
    {
        <script>
            mostrarNotificacion("¡El usuario fue registrado!", "Para usar la cuenta tiene que confirmar su cuenta de correo electrónico.", 'info');
        </script>
    }
    @if (!string.IsNullOrEmpty(noSePuedeEliminar))
    {
        <script>
            mostrarNotificacion("¡Error!", "No se puede eliminar al ultimo usuario con permisos de administrador", 'error');
        </script>
    }
    @if (!string.IsNullOrEmpty(elUsuarioTieneQuedadas))
    {
        <script>
            mostrarNotificacion("¡No se puede eliminar!", "El usuario tiene quedadas pendientes en las que participa y para poder eliminarlo antes debe salir de todas ellas", 'info');
        </script>
    }
    @if (!string.IsNullOrEmpty(eliminacionCorrecta))
    {
        <script>
            mostrarNotificacion("¡Usuario eliminado!", "El usuario ha sido eliminado correctamente", 'success');
        </script>
    }
    @if (!string.IsNullOrEmpty(cuentaNoVerificada))
    {
        <script>
            mostrarNotificacion("¡Email registrado pero sin verificar!", "Para que pueda usar la cuenta, antes debe confirmar su cuenta de correo electrónico", 'error');
        </script>
    }
    @if (!string.IsNullOrEmpty(EdicionCorrecta))
    {
        <script>
            mostrarNotificacion("¡Cambios guardados!", "El usuario ha sido modificado", 'info');
        </script>
    }
    @if (!string.IsNullOrEmpty(noTePuedesEliminar))
    {
        <script>
            mostrarNotificacion("¡No puede eliminarse a sí mismo!", "Debe ser otro administrador quien realice esta acción", 'info');
        </script>
    }
    @if (!string.IsNullOrEmpty(error))
    {
        <script>
            mostrarNotificacion("¡Error!", "Ocurrio un error no esperado, intentelo de nuevo", 'error');
        </script>
    }
</div>